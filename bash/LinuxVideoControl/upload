#!/bin/sh

## Скрипт выполняет загрузку файлов, прошедших слияние, в каталог внешнего сервера.

# Version 1.0

# Подключаем общую для всех скриптов библиотеку функций.
. ./functions

#
# Первичные процедуры - создание файла блокировки, запись в лог файл о начале выполнения.
#

lock_on
log_msg "Запущен"
upload_share_mount

#####

# Основная программа.

# Ищем все файлы по шаблону AA.avi, убирая из вывода каталоги, выходные файлы и текущую дату во временный файл.
find "$camshare" -type f -name '[0-9][0-9].avi' | awk '{FS="/"} {print"/"$2"/"$3"/"$4"/"$5"/"$6"/"$7"/"$8}' | grep -v "/$" | grep -v "$outfiles" | grep -v "$currentdate" > "$camshare$tmpfile"

# Копируем файлы с проверкой на присутствие каталога с названием города/датой - в случае отсутствия создаем каталог камеры и каталог с датой создания.
for source in `cat $camshare$tmpfile` ;
do
    city=`echo "$source" | awk -F / '{ print $5 }'`
    date=`echo "$source" | awk -F / '{ print $7 }'`
    fname=`echo "$source" | awk -F / '{ print $8 }'`
    [ -d "$camshare$outfiles$city" ] || mkdir "$camshare$outfiles$city" | echo "Каталог для $city создан."
    [ -d "$camshare$outfiles$city/$date" ] || mkdir "$camshare$outfiles$city/$date" | echo "Каталог $camshare$outfiles$city/$date создан."
    [ -f "$camshare$outfiles$city/$date/$fname" ] || cp "$source" "$camshare$outfiles$city/$date/$fname"
done

#####

# 
# Окончательные процедуры - удаление временного файла, запись в лог-файл, удаление файла блокировки.
#

clear_tmp
upload_share_umount
log_msg "Завершен"
lock_off
